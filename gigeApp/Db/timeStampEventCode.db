#
# Timestamp and EventCode support
#
# Contains record to add camera trigger delay to camera
# image acquisition time from trigger till when the timestamp is updated.
#
# Db records to compute timestamp delays and to propagate beam
# event code to timeStampSource PV.
#
# Also provides some canned setup sequences for common setups
#
# Required macros:
#	CAM				- Prefix for camera
#
# Optional macros:
#	CAM_DLY_RBV		- PV for camera trigger delay readback
#	CAM_DLY_EGU		- EGU for camera delay, defaults to ns
#	CAM_DLY_SCALE	- Scale factor for coverting camera delay to sec, defaults to 1e9
#	TSDLY_PV		- PV to write timestamp delay to, default to $(CAM):TSS:ExpectedDelay
#

record( longout, "$(CAM):CamDelayScale" )
{
	field( DOL,  "$(CAM_DLY_SCALE=1000000000)" )
	field( EGU,  "$(CAM_DLY_EGU=ns)" )
	field( PINI, "YES" )
	info( autosaveFields, "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV EGU DESC HOPR LOPR VAL" )
	info( archiveFields,  "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV EGU DESC HOPR LOPR VAL" )
}

record( calcout, "$(CAM):CamTrigDelayCalc" )
{
	field( INPA, "$(CAM_DLY_RBV=unused) CPP MS" )
	field( INPB, "$(CAM):CamDelayScale CPP MS" )
	field( CALC, "A/B" )
	field( EGU,  "sec" )
	field( PREC, "4" )
	info( autosaveFields, "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV EGU DESC PREC" )
	info( archiveFields,  "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV EGU DESC PREC VAL" )
}

#
# ExpectedDelay_Calc:
#   Calculates expected delay from trigger to timeStamp update 
# Inputs: All units in seconds
#	A	- Camera trigger delay
#	B	- Camera trigger to timestamp delay
record( calcout, "$(CAM):ExpectedDelay_Calc" )
{
    field( INPA, "$(CAM):CamTrigDelayCalc CP MS" )
    field( INPB, "$(CAM):TrigToTS_Calc CP MS" )
    field( CALC, "A+B" )
    field( EGU,  "sec" )
    field( PREC, "5" ) 
    field( OUT,  "$(TSDLY_PV=$(CAM):TSS:ExpectedDelay) PP MS" )
}

# Required macros:
#	BEAM_EC			- PV to set beam timing event code
#record( dfanout, "$(CAM):EdtBeamEventCodeFanout" )
#{
#	field( DOL,  "$(CAM):EdtBeamEventCode CPP MS" )
#    field( OMSL, "closed_loop")
#    field( OUTA, "$(BEAM_EC) PP MS" )
#    field( OUTB, "$(CAM):TSS_SETEC PP MS" )
#}


record( ao, "$(CAM):Def120HzTrigDelay" )
{
    field( DESC, "Default trigger delay" )
    field( DOL,  "4.3e-3" )
    field( PINI, "YES" )
    field( PREC, "5" )
	info( autosaveFields, "DESC PREC VAL" )
}

record( ao, "$(CAM):Def120HzExposure" )
{
    field( DESC, "Default exposure" )
#	Tested as low as 820 at 120Hz w/ 4.0ms exposure,
#	but long term stability not yet proven 
	field( DOL,  "4.0e-3" )
    field( PINI, "YES" )
    field( PREC, "5" )
	info( autosaveFields, "DESC PREC VAL" )
}

record( longout, "$(CAM):Def120HzMinY" )
{
    field( DESC, "Default Y start line" )
#	Tested as low as 820 at 120Hz w/ 4.0ms exposure
#	but long term stability not yet proven 
	field( DOL,  "828" )
    field( PINI, "YES" )
	info( autosaveFields, "DESC VAL" )
}


# TODO: Set trigger polarity and width
record( seq, "$(CAM):GoTo120HzMode" )
{
	field( DOL1, "0" )
	field( LNK1, "$(CAM):Acquire CA NMS" )
	field( DLY1, "0.0" )

	field( DOL2, "$(CAM):Def120HzMinY" )
	field( LNK2, "$(CAM):MinY PP NMS" )
	field( DLY2, "2.0" )

	field( DOL3, "1" )
	field( LNK3, "$(CAM):TriggerMode PP NMS" )
	field( DLY3, "0.0" )

	field( DOL4, "2" )
	field( LNK4, "$(CAM):ImageMode PP NMS" )
	field( DLY4, "0.0" )

#	field( DOL5, "40" )
#	field( LNK5, "$(CAM):EdtCamEventCode CA NMS" )
#	field( DLY5, "0.0" )

#	field( DOL6, "140" )
#	field( LNK6, "$(CAM):EdtBeamEventCode CA NMS" )
#	field( DLY6, "0.0" )

#	field( DOL7, "$(CAM):Def120HzTrigDelay" )
#	field( LNK7, "$(CAM):EdtCamTrigDelay CA NMS" )
#	field( DLY7, "0.0" )

	field( DOL8, "$(CAM):Def120HzExposure" )
	field( LNK8, "$(CAM):AcquireTime PP NMS" )
	field( DLY8, "0.0" )

	field( DOL9, "0.0" )
	field( LNK9, "$(CAM):IMAGE1:MinCallbackTime PP NMS" )
	field( DLY9, "0.0" )

	field( DOLA, "1" )
	field( LNKA, "$(CAM):Acquire CA NMS" )
	field( DLYA, "2.0" )

	info( autosaveFields, "DESC" )
}


record( seq, "$(CAM):GoToFullMode" )
{
	field( DOL1, "0" )
	field( LNK1, "$(CAM):Acquire CA NMS" )
	field( DLY1, "0.0" )

	field( DOL2, "0" )
	field( LNK2, "$(CAM):TriggerMode PP NMS" )
	field( DLY2, "2.0" )

	field( DOL3, "0" )
	field( LNK3, "$(CAM):MinY PP NMS" )
	field( DLY3, "0.0" )

#	field( DOL4, "4.1e-3" )
#	field( LNK4, "$(CAM):EdtCamTrigDelay CA NMS" )
#	field( DLY4, "0.0" )

	field( DOL5, "0.05" )
	field( LNK5, "$(CAM):AcquireTime PP NMS" )
	field( DLY5, "0.0" )

	field( DOL6, "2" )
	field( LNK6, "$(CAM):ImageMode PP NMS" )
	field( DLY6, "0.0" )

	field( DOL7, "0.5" )
	field( LNK7, "$(CAM):IMAGE1:MinCallbackTime PP NMS" )
	field( DLY7, "0.0" )

#	field( DOL8, "44" )
#	field( LNK8, "$(CAM):EdtCamEventCode PP NMS" )
#	field( DLY8, "0.0" )

#	field( DOL9, "40" )
#	field( LNK9, "$(CAM):EdtBeamEventCode PP NMS" )
#	field( DLY9, "0.0" )

	field( DOL8, "1" )
	field( LNK8, "$(CAM):Acquire CA NMS" )
	field( DLY8, "5.0" )

	field( DOL9, "0" )
	field( LNK9, "$(CAM):Acquire CA NMS" )
	field( DLY9, "1.0" )

	field( DOLA, "1" )
	field( LNKA, "$(CAM):Acquire CA NMS" )
	field( DLYA, "1.0" )

	info( autosaveFields, "DESC" )
#	info( autosaveFields, "DESC DOL1 DLY1 DOL2 DLY2 DOL3 DLY3 DOL4 DLY4 DOL5 DLY5 DOL6 DLY6 DOL7 DLY7 DOL8 DLY8 DOL9 DLY9 DOLA DLYA" )
}

