#
# Timestamp and EventCode support
#
# Contains record to add camera trigger delay to camera
# image acquisition time from trigger till when the timestamp is updated.
#
# Db records to compute timestamp delays and to propagate beam
# event code to timeStampSource PV.
#
# Required macros:
#	CAM				- Prefix for camera
#	CAM_TRIG		- Prefix for EVR trigger
#
# Optional macros:
#	CAM_DLY_EGU		- EGU for camera delay, defaults to ns
#	CAM_DLY_SCALE	- Scale factor for coverting camera delay to sec, defaults to 1e9
#	TSDLY_PV		- PV to write timestamp delay to, default to $(TSS):ExpectedDelay
#

record( ao, "$(CAM):CamTrigDelay" )
{
	field( PINI, "YES" )
	field( PREC, "4" )
	field( EGU,  "sec" )
	field( FLNK, "$(CAM):CamTrigDelayCalc" )
	info( autosaveFields, "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV     DESC HOPR LOPR PREC VAL" )
	info( archiveFields,  "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV EGU DESC HOPR LOPR PREC VAL" )
}

record( calcout, "$(CAM):CamTrigDelayCalc" )
{
	field( INPA, "$(CAM):CamTrigDelay NPP MS" )
	field( INPB, "$(CAM):CamDelayScale CPP MS" )
	field( CALC, "A*B" )
	field( OUT,  "$(CAM_TRIG):TDES" )
	field( EGU,  "sec" )
	field( PREC, "4" )
	info( autosaveFields, "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV     DESC PREC" )
	info( archiveFields,  "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV EGU DESC PREC VAL" )
}

record( longout, "$(CAM):CamDelayScale" )
{
	field( DOL,  "$(CAM_DLY_SCALE=1000000000)" )
	field( EGU,  "$(CAM_DLY_EGU=ns)" )
	field( PINI, "YES" )
	info( autosaveFields, "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV EGU DESC HOPR LOPR VAL" )
	info( archiveFields,  "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV EGU DESC HOPR LOPR VAL" )
}

record( calc, "$(CAM):CamTrigDelay_RBV" )
{
	field( INPA, "$(CAM_TRIG):BW_TDES CPP MS" )
	field( INPB, "$(CAM):CamDelayScale CPP MS" )
	field( CALC, "B==0?A:(A/B)" )
	field( EGU,  "sec" )
	field( PREC, "4" )
	info( autosaveFields, "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV     DESC PREC" )
	info( archiveFields,  "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV EGU DESC PREC VAL" )
}

#
# ExpectedDelay_Calc:
#   Calculates expected delay from trigger to timeStamp update 
# Inputs: All units in seconds
#	A	- Camera trigger delay
#	B	- Camera trigger to timestamp delay
record( calcout, "$(CAM):ExpectedDelay_Calc" )
{
    field( INPA, "$(CAM):CamTrigDelay_RBV CP MS" )
    field( INPB, "$(CAM):TrigToTS_Calc CP MS" )
    field( CALC, "A+B" )
    field( EGU,  "sec" )
    field( PREC, "5" )
    field( OUT,  "$(TSDLY_PV=$(TSS):ExpectedDelay) PP MS" )
}

record( longout, "$(CAM):CamEventCode" )
{
	field( VAL,  "40" )
	field( OUT,  "$(CAM_TRIG):TEC CPP NMS" )
	field( PINI, "YES" )
	info( autosaveFields, "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV EGU DESC HOPR LOPR VAL" )
	info( archiveFields,  "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV EGU DESC HOPR LOPR VAL" )
}
record( longin, "$(CAM):CamEventCode_RBV" )
{
	field( INP,  "$(CAM_TRIG):EC_RBV CPP MS" )
	info( autosaveFields, "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV EGU DESC" )
	info( archiveFields,  "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV EGU DESC VAL" )
}

record( ai, "$(CAM):CamRepRate_RBV" )
{
	field( INP, "$(CAM_TRIG):RATE CPP MS" )
	field( EGU,  "Hz" )
	field( PREC, "1" )
	field( FLNK, "$(CAM):CamRepDur" )
	info( autosaveFields, "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV EGU DESC PREC" )
	info( archiveFields,  "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV EGU DESC PREC VAL" )
}

record( calc, "$(CAM):CamRepDur" )
{
	field( INPA, "$(CAM,undefined):CamRepRate_RBV CPP MS" )
	field( CALC, "A==0?10:(1/A)" )
	field( EGU,  "sec" )
	field( PREC, "3" )
	info( autosaveFields, "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV EGU DESC PREC" )
	info( archiveFields,  "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV EGU DESC PREC VAL" )
}


# This record monitors the trigger mode and puts the timestamp source
# into freeRun mode while the camera is in freeRun.
# $(CAM):TriggerMode_RBV is assumed to keep ADCore's 0==Internal
record( calcout, "$(CAM):TsFreeRunCalc" )
{
    field( DESC, "Update TS FreeRun mode" )
	field( INPA, "$(CAM):TriggerMode_RBV CPP NMS" )
    field( CALC, "A==0?1:0" )
	field( OUT,  "$(TSS):TsFreeRun PP NMS" )
	info( autosaveFields, "DESC" )
}

record( bo, "$(TSS):TsFreeRun" ) { }
record( ao, "$(TSS):ExpectedDelay" ) { }
