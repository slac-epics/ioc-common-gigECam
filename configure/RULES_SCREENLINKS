# RULES_SCREENLINKS
INSTALL_SCREENLINKS = $(INSTALL_LOCATION)/screenLinks
UNINSTALL_DIRS	+= $(INSTALL_SCREENLINKS)

install: updateScreenLinks

.PHONY: updateScreenLinks

# Mark optional AD camera modules w/ unused/fooScreens
ADSTREAM        ?= unused
ADPROSILICA     ?= unused
ARAVISGIGE      ?= unused
EVENT2          ?= unused
HISTORY         ?= unused
IOCADMIN        ?= unused
FFMPEGSERVER    ?= unused
CONFIG_SITE_TOP ?= $(wildcard /reg/g/pcds/pyps/config)
CONFIG_SITE_TOP ?= $(wildcard /afs/slac/g/pcds/config)

# Choose either directory soft links or copies for edm screens
# Copies are recommended when releasing to PROD
# Soft linked directories are more convenient during development
# especially when the linked directories are in your work area too.
updateScreenLinks:	updateScreenLinks_withSoftLinks
#updateScreenLinks:	updateScreenLinks_withCopies

updateScreenLinks_withSoftLinks:
	@echo Updating $(TOP)/screenLinks with soft links ...
	@rm -rf    $(INSTALL_SCREENLINKS)/*
	@mkdir -p  $(INSTALL_SCREENLINKS)
	@ln -s $(CONFIG_SITE_TOP) $(INSTALL_SCREENLINKS)/configSiteTop
	@ln -s {..,$(INSTALL_SCREENLINKS)}/gigeScreens
	@ln -s {$(ADSTREAM),$(INSTALL_SCREENLINKS)}/ADStreamScreens
	@ln -s {$(ADCORE),$(INSTALL_SCREENLINKS)}/areaDetectorHelp
	@ln -s {$(ADCORE),$(INSTALL_SCREENLINKS)}/areaDetectorScreens
	@ln -s {$(ASYN),$(INSTALL_SCREENLINKS)}/asynScreens
	@ln -s {$(ADPROSILICA),$(INSTALL_SCREENLINKS)}/prosilicaScreens
	@ln -s {$(ARAVISGIGE),$(INSTALL_SCREENLINKS)}/arvScreens
	@ln -s {$(EVENT2),$(INSTALL_SCREENLINKS)}/event2Screens
	@ln -s {$(HISTORY),$(INSTALL_SCREENLINKS)}/historyScreens
	@ln -s {$(IOCADMIN),$(INSTALL_SCREENLINKS)}/iocScreens
	@ln -s {$(FFMPEGSERVER),$(INSTALL_SCREENLINKS)}/ffmpegScreens

# Use copies for most screens so they can be deployed to accelerator
# PROD area via cram.
# Still use soft link for TOP/gigeScreens as it's relative
# Still use soft link for configSiteTop as it's only for python viewer
# and we'll need another solution for how to deploy it to accelerator.
updateScreenLinks_withCopies:
	@echo Updating $(TOP)/screenLinks ...
	@rm    -rf  $(INSTALL_SCREENLINKS)/*
	@mkdir -p   $(INSTALL_SCREENLINKS)
	@ln -s $(CONFIG_SITE_TOP) $(INSTALL_SCREENLINKS)/configSiteTop
	@ln -s {..,$(INSTALL_SCREENLINKS)}/gigeScreens
	@mkdir -p   $(INSTALL_SCREENLINKS)/ADStreamScreens
	@mkdir -p   $(INSTALL_SCREENLINKS)/areaDetectorHelp
	@mkdir -p   $(INSTALL_SCREENLINKS)/areaDetectorScreens
	@mkdir -p   $(INSTALL_SCREENLINKS)/arvScreens
	@mkdir -p   $(INSTALL_SCREENLINKS)/asynScreens
	@mkdir -p   $(INSTALL_SCREENLINKS)/event2Screens
	@mkdir -p   $(INSTALL_SCREENLINKS)/iocScreens
	@mkdir -p   $(INSTALL_SCREENLINKS)/prosilicaScreens
	@mkdir -p   $(INSTALL_SCREENLINKS)/ffmpegScreens
	@mkdir -p   $(INSTALL_SCREENLINKS)/historyScreens
	-@cp $(ADCORE)/areaDetectorHelp/*.*      $(INSTALL_SCREENLINKS)/areaDetectorHelp    2> /dev/null
	-@cp $(ADCORE)/areaDetectorScreens/*.*   $(INSTALL_SCREENLINKS)/areaDetectorScreens 2> /dev/null
	-@cp $(ADPROSILICA)/prosilicaScreens/*.* $(INSTALL_SCREENLINKS)/prosilicaScreens    2> /dev/null
	-@cp $(ADSTREAM)/ADStreamScreens/*.*     $(INSTALL_SCREENLINKS)/ADStreamScreens 2> /dev/null
	-@cp $(ARAVISGIGE)/arvScreens/*.*        $(INSTALL_SCREENLINKS)/arvScreens          2> /dev/null
	-@cp $(ASYN)/asynScreens/*.*             $(INSTALL_SCREENLINKS)/asynScreens         2> /dev/null
	-@cp $(EVENT2)/event2Screens/*.*         $(INSTALL_SCREENLINKS)/event2Screens       2> /dev/null
	-@cp $(FFMPEGSERVER)/ffmpegScreens/*.*   $(INSTALL_SCREENLINKS)/ffmpegScreens       2> /dev/null
	-@cp $(HISTORY)/historyScreens/*.*       $(INSTALL_SCREENLINKS)/historyScreens      2> /dev/null
	-@cp $(IOCADMIN)/iocScreens/*.*          $(INSTALL_SCREENLINKS)/iocScreens          2> /dev/null

