#
# CONFIG file for gigE Camera
#

RELEASE=/reg/g/pcds/package/epics/3.14/ioc/common/gigECam/R2.1.0

ENGINEER	= "Bruce Hill (bhill)"
LOCATION	= "XXX GigE 2"
TARGET_ARCH	= linux-x86_64

HUTCH		= xxx
CAM_PV	    = XXX:G046B:02
IOC_PV		= XXX:IOC:G046B:02
# EVR is optional but if used needs EVR_PV, EVR_TYPE, and EVR_TRIG
#EVR_PV	    = XXX:EVR:G046B:02
#EVR_TYPE	= SLAC
#EVR_TRIG	= 2
# Optional additional triggers
#EXTRA_TRIG(TRIG=3)
#EXTRA_TRIG(TRIG=4)

# Options for CAM_TYPE are: aravis, Basler, AVT_Manta, prosilica
CAM_TYPE	= prosilica

# Use IP addr for aravisGigE cameras
CAM_IP		= gige-xxx-g046b-2

# Available models are: 
# Options for $MODEL.env are identified via: $RELEASE/db/$MODEL.env
MODEL		= MantaG046B

# Optional acquisition auto-start
# AUTO_START	= 1

# The MJPG plugin needs a unique HTTP port number
# MJPG stream viewable via http://ioc-hutch-name:$HTTP_PORT/MJPG1.mjpg
HTTP_PORT	= 8002 

# Interface used by host and camera
# NET_IF_NUM determined by interface order in output of "sar -n DEP 1 1"
NET_IF		= ETH0
NET_IF_NUM	= 1

# Image streams
# Each image stream has it's own dedicated ROI and CC plugin
# and will in the future have some glue logic to help manage
# the port connections, automatic initialization, ROI On/Off, etc
# For now setup is still manual on first boot but is saved via autosave.
# For image viewing, we typically want a 2x2 ROI and 10hz frame rate
# for our large resolution cameras to void overloading the network or hosts.
# Example:
# ImageName, ArrayData PV,				ROI plugin prefix	ROI Port
#	IMAGE2	 $(CAM):IMAGE2:ArrayData	$(CAM):IMAGE2:ROI	IMAGE2:ROI
# Three types of streams are supported via the required NAME parameter:
#	data		Intended for data recording at up to full rate and resolution
#	viewer		Intended for viewing via edm or python viewers
#	thumbnail	Intended for small low res low frame rate image monitoring via a 130x174 edm widget 
#
# For now, data and viewer get the same plugins and differ only in
# how they are configured and used.  Later glue logic for setup and control
# will differ for these.
# Thumbnails get much the same plugins, but the ArrayData is UINT8 even for 16 bit cameras
#
# Optional Stream Parameters: (More to be added later)
#	IMAGE_NAME	Defaults to DATA1, IMAGE1, or THUMBNAIL depending on the type of stream
STREAM(NAME=data,IMAGE_NAME=DATA1)
STREAM(NAME=viewer,IMAGE_NAME=IMAGE1)
STREAM(NAME=viewer,IMAGE_NAME=IMAGE2)
STREAM(NAME=thumbnail,IMAGE_NAME=THUMBNAIL)

# Plugin sets
# Options for PLUGINS: commonPlugins and pcdsPlugins
#	commonPlugins:
#		Proc1, Trans1, CC1, CC2, Over1,
#		ROI1, ROI2, ROI3, ROI4,
#		Stats1, Stats2, Stats3, Stats4,
#		NetCDF1, TIFF1, JPEG1, Nexus1, HDF51
#	pcdsPlugins: commonPlugins plus
#		IMAGE1, IMAGE2, THUMBNAIL
#		ROI5, ROI6, ROI7
#		MJPG1, FMPG1
# Note: pcdsPlugins is being phased out in favor of the commonPlugins
# along w/ one or more viewer or data streams
PLUGINS		= commonPlugins

# PLUGIN can be used to add individual plugins one by one
# Must specify plugin NAME
# N defaults to 1
# PORT defaults to $(NAME)$(N)
# If you're also using plugin sets, specify PORT or N to avoid conflicts
# The Image plugin also requires parameter IMAGE_NAME
#PLUGIN(NAME=Stats)
#PLUGIN(NAME=Image,IMAGE_NAME=IMAGE3)
#PLUGIN(NAME=ROI[,N=8])
#PLUGIN(NAME=Stats[,PORT=ROI8])
#PLUGIN(NAME=TIFF[,N=2])

# Not in commonPlugins
# MJPG:	Motion JPEG web stream via HTTP_PORT
# MJPG stream viewable via http://ioc-hutch-name:$HTTP_PORT/MJPG1.mjpg
PLUGIN(NAME=MJPG)
# MPEG:	MPEG file I/O
# MPEG streaming not available due to lack of driver suport and high cpu overhead
PLUGIN(NAME=MPEG)

# Viewers: Still supported, but being phased out in favor of streams
# commonPlugins plus VIEWERS: MonoFull, MonoBin2, and MonoBin4
# provides the same set of plugins as pcdsPlugins
#VIEWER(NAME=MonoFull)
#VIEWER(NAME=MonoBin2,IMAGE_NAME=IMAGE2)
#VIEWER(NAME=MonoBin4,IMAGE_NAME=THUMBNAIL)

# ARV_DEBUG (Only for aravisGigE cameras)
# Comma separated category:level
# Levels: 0=none, 1=warning, 2=debug, 3=log, 4=count
# Categories:
#	dom, genicam, gvcp, gvsp, evaluator, misc, device, stream_thread, interface
# Can also be set from code via: arv_debug_enable( "genicam:3" )
#ARV_DEBUG	= genicam:3,device:3,chunk:2,dom:2,evaluator:2,stream_thread:2,interface:2,misc:2
